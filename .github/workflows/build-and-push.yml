name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'server/apps/**'
      - '.github/workflows/build-and-push.yml'
  pull_request:
    branches:
      - main
      - develop

env:
  REGISTRY: localhost:5001
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-api:
    name: Build API Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./server/apps/api
          push: true
          tags: |
            ${{ env.REGISTRY }}/react-scuba-api:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/react-scuba-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan API image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/react-scuba-api:${{ env.IMAGE_TAG }}
          format: 'sarif'
          output: 'trivy-api-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-api-results.sarif'

  build-web:
    name: Build Web Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Web image
        uses: docker/build-push-action@v5
        with:
          context: ./server/apps/web
          push: true
          tags: |
            ${{ env.REGISTRY }}/react-scuba-web:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/react-scuba-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan Web image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/react-scuba-web:${{ env.IMAGE_TAG }}
          format: 'sarif'
          output: 'trivy-web-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-web-results.sarif'
