version: "3.8"

services:
  node:
    image: node:20-alpine
    volumes:
      - ../..:/app:cached
      - node_modules:/app/node_modules
    working_dir: /app
    command: sh -c "npm install --legacy-peer-deps && npm start"
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - db
    networks:
      - swarm-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --quiet --tries=1 --spider http://127.0.0.1:3000/ || exit 1",
        ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 45s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M

  python:
    image: python:3.14-slim
    volumes:
      - ../..:/app:cached
      - python_venv:/app/.venv
      - python_cache:/root/.cache/pip
    working_dir: /app
    command: sh -c "pip install -r python_utils/requirements.txt && python -m python_utils.doc_utils inventory"
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    depends_on:
      - db
    networks:
      - swarm-network
    healthcheck:
      test:
        ["CMD", "python", "-c", "import sys; print('Python OK'); sys.exit(0)"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - db_data:/var/lib/postgresql/data
      - db_logs:/var/log/postgresql
    ports:
      - "5432:5432"
    networks:
      - swarm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=pg_stat_statements",
        "-c",
        "pg_stat_statements.track=all",
      ]
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"

volumes:
  db_data:
    driver: local
  db_logs:
    driver: local
  node_modules:
    driver: local
  python_venv:
    driver: local
  python_cache:
    driver: local

networks:
  swarm-network:
    driver: overlay
    attachable: true
