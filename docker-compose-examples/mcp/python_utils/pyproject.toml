[project]
name = "react-scuba-utils"
version = "0.1.0"
description = "Python MCP utilities for React Scuba multi-tenant platform"
readme = "README.md"
requires-python = ">=3.14"
authors = [
    { name = "React Scuba Development Team" }
]
keywords = ["mcp", "model-context-protocol", "utilities", "dive-shop"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "websockets>=13.0",
    "pydantic>=2.9.0",
    "httpx>=0.27.0",
    "python-multipart>=0.0.20",
    "structlog>=24.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.5.1",
    "pytest-cov>=6.1.0",
    "pytest-asyncio>=0.25.3",
    "ruff>=0.9.8",
    "isort>=5.14.0",
    "black>=25.1.0",
]

[project.urls]
homepage = "https://github.com/DeanLuus22021994/react-scuba"
repository = "https://github.com/DeanLuus22021994/react-scuba"
documentation = "https://github.com/DeanLuus22021994/react-scuba/tree/main/docs"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=react_scuba_utils",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.ruff]
target-version = "py313"
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.black]
line-length = 100
target-version = ["py313"]
include = '\.pyi?$'
