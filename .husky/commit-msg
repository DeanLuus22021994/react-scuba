#!/bin/sh
# Commit message hook - validates conventional commit format

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2

# Skip validation for squash, fixup, and merge commits
if [ "$COMMIT_SOURCE" != "" ]; then
  exit 0
fi

# Read the commit message
COMMIT_MSG=$(head -n1 "$COMMIT_MSG_FILE")

# Pattern for conventional commits
# Format: type(scope): message or type: message
PATTERN="^(feat|fix|refactor|style|test|docs|chore|ci|perf|revert)(\([a-z\-]+\))?: .{3,}"

# Check if message matches pattern
if ! echo "$COMMIT_MSG" | grep -qE "$PATTERN"; then
  echo "‚ùå Commit message format invalid!"
  echo ""
  echo "Required format:"
  echo "  type(scope): subject"
  echo "  type: subject"
  echo ""
  echo "Valid types: feat, fix, refactor, style, test, docs, chore, ci, perf, revert"
  echo "Scope is optional (e.g., web, api, types)"
  echo ""
  echo "Examples:"
  echo "  feat(web): add user profile page"
  echo "  fix: resolve API timeout issue"
  echo "  docs: update README"
  echo ""
  exit 1
fi

exit 0
