# GPU-Accelerated Bleeding Edge Development Container
# React Scuba Multi-tenant Platform - RTX Optimized
FROM nvidia/cuda:12.4-devel-ubuntu22.04 AS base

# Environment setup for GPU builds
ENV NODE_VERSION=21.4.0
ENV PNPM_VERSION=8.15.0
ENV TURBO_VERSION=3.0.0
ENV CUDA_VISIBLE_DEVICES=0
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Install system dependencies with GPU support
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    python3 \
    python3-pip \
    cmake \
    ninja-build \
    pkg-config \
    ca-certificates \
    gnupg \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js latest
RUN curl -fsSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz \
    | tar -xJ -C /usr/local --strip-components=1

# Install bleeding-edge package managers
RUN npm install -g npm@latest pnpm@${PNPM_VERSION} turbo@${TURBO_VERSION}

# Create snapshot layer - Base System
FROM base AS system-snapshot
RUN echo "Base system with GPU support ready" > /snapshot-system.txt

# Dependencies layer with exact versions
FROM system-snapshot AS deps
WORKDIR /app
COPY .npmrc package*.json ./
COPY server/package.json server/
COPY server/turbo.json server/
COPY server/apps/*/package.json server/apps/*/
COPY server/packages/*/package.json server/packages/*/

# Install exact bleeding-edge versions
WORKDIR /app/server
RUN npm ci --no-audit --no-fund

# Create snapshot layer - Dependencies
FROM deps AS deps-snapshot
RUN echo "Exact bleeding-edge dependencies installed" > /snapshot-deps.txt

# Build shared packages with GPU acceleration
FROM deps-snapshot AS shared-build
COPY server/ /app/server/
WORKDIR /app/server

# Configure GPU-accelerated build environment
ENV TURBO_TELEMETRY_DISABLED=1
ENV SWC_TARGET=es2022
ENV VITE_GPU_ACCELERATION=true
ENV NODE_OPTIONS="--max-old-space-size=8192"
ENV FORCE_COLOR=1

# Build shared packages in dependency order with GPU
RUN turbo build --filter=@react-scuba/config --concurrency=4
RUN turbo build --filter=@react-scuba/types --concurrency=4
RUN turbo build --filter=@react-scuba/utils --concurrency=4
RUN turbo build --filter=@react-scuba/ui --concurrency=4

# Create snapshot layer - Shared Packages
FROM shared-build AS shared-snapshot
RUN echo "GPU-accelerated shared packages built" > /snapshot-shared.txt

# Build applications with maximum GPU utilization
FROM shared-snapshot AS app-build
RUN turbo build --filter=@react-scuba/content --concurrency=8
RUN turbo build --filter=@react-scuba/api --concurrency=8
RUN turbo build --filter=@react-scuba/web --concurrency=8

# Create snapshot layer - Complete Build
FROM app-build AS complete-snapshot
RUN echo "Complete GPU-accelerated build finished" > /snapshot-complete.txt

# Development runtime with hot reload
FROM complete-snapshot AS dev
EXPOSE 3000 3001 5173 4173
WORKDIR /app/server
CMD ["turbo", "dev"]

# Production runtime
FROM complete-snapshot AS prod
WORKDIR /app/server
CMD ["turbo", "start", "--filter=@react-scuba/web"]
