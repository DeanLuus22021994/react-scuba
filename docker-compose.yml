# ==============================================================================
# docker-compose.yml - React Scuba Full Stack Orchestration
# ==============================================================================
#
# Single command deployment: docker compose up
# Includes core service tiers via modular compose fragments
# MCP services managed separately in docker-compose.mcp-persistent.yml
#
# DEPLOYMENT PROFILES:
#   minimal       - DevContainer essentials (3 services: node-tools + 2 MCP)
#   base          - + databases & cache (postgres, mariadb, redis, memcached)
#   app           - + application services (node-api, node-web)
#   monitoring    - + metrics & visualization (prometheus, grafana, exporters)
#   loadbalancing - + nginx reverse proxy
#   gpu           - + NVIDIA GPU & Ollama LLM inference
#   full          - All services (28 total)
#
# USAGE:
#   docker compose --profile full up              # Full cluster (28 services)
#   docker compose --profile minimal up           # Minimal (3 services)
#   docker compose --profile base --profile app up  # Databases + app (10 services)
#   docker compose up --build                      # Build + start with full profile
#
# MCP SERVICES:
#   docker compose -f docker-compose.mcp-persistent.yml --profile mcp up -d
#

include:
  # ==== Database Services ====
  - .devcontainer/infrastructure/databases/postgres/docker-compose.postgres.yml
  - .devcontainer/infrastructure/databases/mariadb/docker-compose.mariadb.yml

  # ==== Cache Services ====
  - .devcontainer/infrastructure/cache/memcached/docker-compose.memcached.yml
  - .devcontainer/infrastructure/cache/redis/docker-compose.redis.yml
  - .devcontainer/infrastructure/cache/minio/docker-compose.minio.yml

  # ==== Application Services ====
  - .devcontainer/infrastructure/services/api/docker-compose.api.yml
  - .devcontainer/infrastructure/services/web/docker-compose.web.yml
  - .devcontainer/infrastructure/services/buildx/docker-compose.buildx.yml

  # ==== Monitoring Services ====
  - .devcontainer/infrastructure/monitoring/prometheus/docker-compose.prometheus.yml
  - .devcontainer/infrastructure/monitoring/grafana/docker-compose.grafana.yml
  - .devcontainer/infrastructure/monitoring/exporters/postgres/docker-compose.postgres-exporter.yml
  - .devcontainer/infrastructure/monitoring/exporters/mysql/docker-compose.mysql-exporter.yml
  - .devcontainer/infrastructure/monitoring/exporters/cadvisor/docker-compose.cadvisor.yml
  - .devcontainer/infrastructure/monitoring/exporters/node/docker-compose.node-exporter.yml

  # ==== Networking Services ====
  - .devcontainer/infrastructure/networking/nginx/docker-compose.nginx.yml

  # ==== GPU Services ====
  - .devcontainer/infrastructure/services/nvidia/docker-compose.nvidia.yml
  - .devcontainer/infrastructure/services/ollama/docker-compose.ollama.yml

# Named volumes for persistence (shared across all fragments)
volumes:
  # ==== Database Volumes ====
  postgres-data:
    name: postgres-data
  postgres-node-cache:
    name: postgres-node-cache
  postgres-cache:
    name: postgres-cache
  mariadb-data:
    name: mariadb-data
  mariadb-node-cache:
    name: mariadb-node-cache
  mariadb-cache:
    name: mariadb-cache

  # ==== Cache Volumes ====
  redis-data:
    name: redis-data
  redisinsight-data:
    name: redisinsight-data
  minio-data:
    name: minio-data

  # ==== Build & Development Volumes ====
  buildkit-cache:
    name: buildkit-cache
  buildkit-tmp:
    name: buildkit-tmp
  node-builder-node-modules:
    name: node-builder-node-modules
  node-builder-npm:
    name: node-builder-npm
  node-builder-git-hooks:
    name: node-builder-git-hooks
  node-builder-husky:
    name: node-builder-husky
  node-bootstrap-cache:
    name: node-bootstrap-cache

  # ==== CI/CD Volumes ====
  runner-work:
    name: runner-work
  runner-cache:
    name: runner-cache

  # ==== Infrastructure Volumes ====
  prometheus-data:
    name: prometheus-data
  grafana-data:
    name: grafana-data
  nginx-logs:
    name: nginx-logs
  nginx-slave1-logs:
    name: nginx-slave1-logs
  nginx-slave2-logs:
    name: nginx-slave2-logs

  # ==== API & Application Volumes ====
  api-logs:
    name: api-logs
  api-data:
    name: api-data

  # ==== GPU & AI Volumes ====
  ollama-models:
    name: ollama-models
    driver: local

  # ==== MCP Volumes ====
  mcp-discovery-cache:
    name: mcp-discovery-cache
  markitdown-cache:
    name: markitdown-cache
  mcp-memory-cache:
    name: mcp-memory-cache

  # ==== Workspace Node Modules ====
  root_node_modules:
    name: root_node_modules
  web_node_modules:
    name: web_node_modules
  api_node_modules:
    name: api_node_modules
  content_node_modules:
    name: content_node_modules
  docs_node_modules:
    name: docs_node_modules
  config_node_modules:
    name: config_node_modules
  types_node_modules:
    name: types_node_modules
  ui_node_modules:
    name: ui_node_modules
  utils_node_modules:
    name: utils_node_modules
  react-vite-cache:
    name: react-vite-cache
  react-npm-cache:
    name: react-npm-cache

  # ==== Development Volumes ====
  devcontainer-cache:
    name: devcontainer-cache
  python-exp-cache:
    name: python-exp-cache
  k8s-config:
    name: k8s-config
  k8s-cache:
    name: k8s-cache

# Network configuration (shared by all included services)
networks:
  mcp-cluster:
    name: mcp-cluster
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
