# kind cluster configuration for local Kubernetes development
# Optimized for React Scuba multi-tenant platform
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: react-scuba

# Networking configuration
networking:
  apiServerAddress: "127.0.0.1"
  apiServerPort: 6443
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"
  disableDefaultCNI: true  # For Linkerd compatibility

# Control plane node
nodes:
  - role: control-plane
    kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
    extraPortMappings:
      # HTTP
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      # HTTPS
      - containerPort: 443
        hostPort: 443
        protocol: TCP
      # PostgreSQL
      - containerPort: 30432
        hostPort: 5432
        protocol: TCP
      # MariaDB
      - containerPort: 30306
        hostPort: 3306
        protocol: TCP
      # Redis
      - containerPort: 30379
        hostPort: 6379
        protocol: TCP
      # Prometheus
      - containerPort: 30090
        hostPort: 9090
        protocol: TCP
      # Grafana
      - containerPort: 30300
        hostPort: 3000
        protocol: TCP
      # MCP Discovery
      - containerPort: 30097
        hostPort: 9097
        protocol: TCP
    extraMounts:
      - hostPath: /var/run/docker.sock
        containerPath: /var/run/docker.sock

  # Worker nodes for distributed workload
  - role: worker
    labels:
      storage: fast-ssd
      tier: database
    extraMounts:
      - hostPath: ./data/k8s-volumes/worker1
        containerPath: /mnt/data

  - role: worker
    labels:
      storage: standard
      tier: application
    extraMounts:
      - hostPath: ./data/k8s-volumes/worker2
        containerPath: /mnt/data

  - role: worker
    labels:
      storage: standard
      tier: monitoring
    extraMounts:
      - hostPath: ./data/k8s-volumes/worker3
        containerPath: /mnt/data

# Configure containerd for local registry
containerdConfigPatches:
  - |-
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5001"]
      endpoint = ["http://localhost:5001"]
    [plugins."io.containerd.grpc.v1.cri".registry.configs."localhost:5001".tls]
      insecure_skip_verify = true
