# ==============================================================================
# MinIO Object Storage - S3-Compatible Storage Service
# ==============================================================================
# Purpose: Self-hosted object storage for development and testing
# Architecture: Standalone MinIO server with persistent volumes
# Base: Official MinIO image
# S3 Compatible: Full AWS S3 API compatibility
# Free: Open source and production-ready
# ==============================================================================

FROM minio/minio:latest

# Metadata labels
LABEL org.opencontainers.image.title="MinIO Object Storage" \
  org.opencontainers.image.description="S3-compatible object storage for development" \
  org.opencontainers.image.vendor="React Scuba" \
  maintainer="Dean Luus" \
  purpose="object-storage" \
  s3.compatible="true" \
  storage.type="local"

# Install additional utilities for health checks
USER root
RUN microdnf install -y curl jq && \
  microdnf clean all && \
  rm -rf /var/cache/yum

# Create health check script
RUN cat > /usr/local/bin/minio-health <<'HEALTH_EOF'
#!/bin/bash
set -euo pipefail

# Generate timestamp in YY-MM-DD-HH-MM-SS format
TIMESTAMP=$(date +"%y-%m-%d-%H-%M-%S")

# Check MinIO health endpoint
if HEALTH_STATUS=$(curl -sf http://localhost:9000/minio/health/live 2>&1); then
  STATUS="healthy"
  STORAGE_AVAILABLE=true
else
  STATUS="unhealthy"
  STORAGE_AVAILABLE=false
fi

# Get storage stats if available
if curl -sf http://localhost:9000/minio/health/ready > /dev/null 2>&1; then
  READY=true
else
  READY=false
fi

cat <<JSON
{
  "timestamp": "${TIMESTAMP}",
  "status": "${STATUS}",
  "service": "minio",
  "storage_available": ${STORAGE_AVAILABLE},
  "ready": ${READY},
  "endpoint": "http://localhost:9000",
  "console": "http://localhost:9001",
  "s3_compatible": true
}
JSON
HEALTH_EOF

# Convert CRLF to LF if present (Windows compatibility)
RUN sed -i 's/\r$//' /usr/local/bin/minio-health && chmod +x /usr/local/bin/minio-health

# Switch back to minio user
USER minio-user

# Expose MinIO API and Console ports
EXPOSE 9000 9001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
  CMD /usr/local/bin/minio-health > /dev/null || exit 1

# Environment variables (override in docker-compose)
ENV MINIO_ROOT_USER=minioadmin \
  MINIO_ROOT_PASSWORD=minioadmin \
  MINIO_VOLUMES=/data

# Start MinIO server with console
CMD ["minio", "server", "/data", "--console-address", ":9001"]
