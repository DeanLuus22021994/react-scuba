# ==============================================================================
# Redis Service Configuration
# ==============================================================================
# Purpose: In-memory data structure store with persistence
# Location: .devcontainer/infrastructure/cache/redis/
# Usage: docker compose -f docker-compose.redis.yml up
# Testing: docker compose exec redis redis-cli ping
# ==============================================================================

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    hostname: redis
    profiles:
      - full
      - base
    networks:
      mcp-cluster:
        ipv4_address: 172.28.0.61
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.react-scuba.service=redis"
      - "com.react-scuba.tier=cache"

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    hostname: redisinsight
    profiles:
      - full
      - base
    networks:
      mcp-cluster:
        ipv4_address: 172.28.0.62
    ports:
      - "5540:5540"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:5540/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "com.react-scuba.service=redisinsight"