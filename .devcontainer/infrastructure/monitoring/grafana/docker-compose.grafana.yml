# ==============================================================================
# Grafana Service Configuration
# ==============================================================================
# Purpose: Metrics visualization and dashboarding
# Location: .devcontainer/infrastructure/monitoring/grafana/
# Usage: docker compose -f docker-compose.grafana.yml up
# Web UI: http://localhost:3000 (admin/admin)
# ==============================================================================

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    profiles:
      - full
      - monitoring
    ports:
      - "3000:3000"
    networks:
      mcp-cluster:
        ipv4_address: 172.28.0.72
    volumes:
      - grafana-data:/var/lib/grafana
      # Provisioning configurations
      - type: bind
        source: ./provisioning/datasources/prometheus.datasource
        target: /etc/grafana/provisioning/datasources/prometheus.yaml
        read_only: true
      - type: bind
        source: ./provisioning/dashboards/dashboards.yml
        target: /etc/grafana/provisioning/dashboards/dashboards.yml
        read_only: true
      # Dashboard structure - complete dashboards
      - type: bind
        source: ./dashboards/complete
        target: /etc/grafana/dashboards/complete
        read_only: true
      # Dashboard structure - reusable components (for reference/future use)
      - type: bind
        source: ./dashboards/common
        target: /etc/grafana/dashboards/common
        read_only: true
      - type: bind
        source: ./dashboards/panels
        target: /etc/grafana/dashboards/panels
        read_only: true
    env_file:
      - ../../../../devcontainer.env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/dashboards/complete/cluster.json
      - GF_DATABASE_WAL=true
      - GF_DATABASE_CACHE_MODE=shared
      - GF_LOG_LEVEL=warn
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      prometheus:
        condition: service_healthy
    labels:
      - "com.react-scuba.service=grafana"
      - "com.react-scuba.tier=monitoring"

volumes:
  grafana-data:
    name: grafana-data
