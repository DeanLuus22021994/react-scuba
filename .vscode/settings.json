{
    // Auto-save to reduce batch processing
    "files.autoSave": "onFocusChange",
    // GPU acceleration for VS Code UI (not language servers)
    "window.titleBarStyle": "custom",
    "terminal.integrated.gpuAcceleration": "on",
    "terminal.integrated.strictEnv": false,  // Utilize TerminalOptions.strictEnv from #vscodeAPI
    // JavaScript/TypeScript language server optimization
    "typescript.tsserver.maxTsServerMemory": 4096,
    "typescript.tsserver.experimental.enableProjectDiagnostics": false,
    "typescript.preferences.includePackageJsonAutoImports": "auto",  // Utilize Extension.packageJSON from #vscodeAPI
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.updateImportsOnFileMove.enabled": "always",
    "javascript.suggest.autoImports": true,
    "typescript.suggest.autoImports": true,
    // Editor performance optimizations
    "editor.formatOnSave": true,
    "editor.formatOnPaste": false,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2
    },
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.tabSize": 2,
        "editor.formatOnSave": false
    },
    // Markdown linting configuration - disabled rules for documentation aesthetics
    "markdownlint.config": {
        "MD022": false,  // Allow headings without blank lines for anchor tags
        "MD031": false,  // Allow fenced code blocks without surrounding blank lines (aesthetics)
        "MD032": false,  // Allow lists without surrounding blank lines (aesthetics)
        "MD033": false,  // Allow inline HTML for anchor tags
        "MD040": false,  // Allow fenced code blocks without language specification
        "MD051": false   // Disable link fragments validation for clickable headings
    },
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit",
        "source.fixAll": "explicit",
        "source.fixAll.eslint": "explicit"
    },
    // Reduce language server load
    "files.watcherExclude": {
        "**/node_modules/**": true,
        "**/dist/**": true,
        "**/.git/**": true,
        "**/build/**": true,
        "**/coverage/**": true
    },
    "search.exclude": {
        "**/node_modules": true,
        "**/dist": true,
        "**/build": true,
        "**/coverage": true,
        "**/.git": true,
        "**/package-lock.json": true
    },
    // CSS validation (Tailwind v4 compatible)
    "css.lint.unknownAtRules": "ignore",
    "css.validate": true,
    // Copilot settings
    "chat.tools.global.autoApprove": true,
    "editor.experimentalGpuAcceleration": "on",
    // ESLint settings for flat config consistency
    "eslint.useFlatConfig": true,
    "eslint.validate": ["javascript", "javascriptreact"],
    "eslint.run": "onType",
    // File associations
    "files.associations": {
        ".husky/*": "shellscript"
    },
    // Python settings - FIXED for Python 3.14 compatibility issues
    // Use freethreaded Python 3.14 for linting tools to avoid GIL errors
    "python.defaultInterpreterPath": "./.venv/Scripts/python.exe",
    "python.terminal.activateEnvironment": true,
    "python.terminal.activateEnvInCurrentTerminal": true,
    "python.terminal.shellIntegration.enabled": true,
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.packageIndexDepths": [
        {
            "name": "",
            "depth": 2,
            "includeAllSymbols": true
        }
    ],
    // UV integration - disable default venv creation
    "python.createEnvironment.contentButton": "hide",
    "python.createEnvironment.trigger": "off",
    // Python linting - DISABLE native servers to prevent crashes
    "python.linting.enabled": true,
    "python.linting.ruffEnabled": true,
    "python.linting.ruffArgs": ["--config", "docker-compose-examples/mcp/python_utils/pyproject.toml"],
    "ruff.enable": true,
    "ruff.organizeImports": true,
    "ruff.fixAll": true,
    "ruff.nativeServer": false,  // DISABLE native server to prevent crashes
    "ruff.interpreter": ["C:\\Users\\deanl.MSI\\AppData\\Local\\Programs\\Python\\Python314\\python3.14t.exe"],  // Use freethreaded Python
    "ruff.path": ["./.venv/Scripts/ruff.exe"],
    "isort.check": true,
    "isort.importStrategy": "fromEnvironment",
    "isort.args": ["--settings-path", "docker-compose-examples/mcp/python_utils/pyproject.toml"],
    "isort.interpreter": ["C:\\Users\\deanl.MSI\\AppData\\Local\\Programs\\Python\\Python314\\python3.14t.exe"],  // Use freethreaded Python
    "python.sortImports.args": [
        "--profile",
        "black",
        "--settings-path",
        "docker-compose-examples/mcp/python_utils/pyproject.toml"
    ],
    // Disable problematic language servers
    "pylint.enabled": false,  // Disable Pylint native server
    "mypy.enabled": false,    // Disable MyPy native server
    "python.languageServer": "Pylance",
    "pylance.enable": true,
    // Pylance settings for Python 3.14 compatibility
    "python.analysis.indexing": true,
    "python.analysis.autoSearchPaths": true,
    "python.analysis.useLibraryCodeForTypes": true,
    "python.analysis.diagnosticMode": "workspace",
    "python.analysis.includeFileSpecs": [
        "**/*.py"
    ],
    "python.analysis.exclude": [
        "**/node_modules/**",
        "**/__pycache__/**",
        "**/.venv/**",
        "**/dist/**",
        "**/build/**"
    ],
    // Docker settings for containerized Python development
    "docker.languageserver.diagnostics.deprecatedMaintainer": "ignore",
    "docker.languageserver.diagnostics.emptyContinuationLine": "ignore",
    "docker.languageserver.diagnostics.instructionCasing": "ignore",
    // Remote development settings
    "remote.SSH.configFile": "~/.ssh/config",
    "remote.SSH.showLoginTerminal": true
}
