{
  "$schema": "./schemas/vscode-settings-schema.json",
  // ============================================================================
  // TEAM SETTINGS (tracked in git)
  // For personal preferences, create .vscode/settings.local.json
  // See .vscode/settings.local.example.json for template
  // ============================================================================

  // Auto-save to reduce batch processing
  "files.autoSave": "afterDelay",

  // GPU acceleration for VS Code UI (not language servers)
  "window.titleBarStyle": "custom",
  "editor.experimentalGpuAcceleration": "on",

  // JavaScript/TypeScript language server optimization (Turbo monorepo)
  "typescript.tsserver.maxTsServerMemory": 8192,
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "typescript.tsserver.useSyntaxServer": "auto",
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "typescript.preferences.importModuleSpecifier": "relative",
  "typescript.preferences.jsxAttributeCompletionStyle": "auto",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.suggest.autoImports": true,
  "typescript.suggest.autoImports": true,
  "typescript.suggest.paths": true,
  "typescript.workspaceSymbols.scope": "allOpenProjects",

  // Editor performance optimizations
  "editor.formatOnSave": true,
  "editor.formatOnPaste": false,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.detectIndentation": false,
  "editor.snippetSuggestions": "top",

  // Language-specific formatting (Biome-first strategy)
  "[javascript]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2,
    "editor.codeActionsOnSave": {
      "quickfix.biome": "explicit",
      "source.organizeImports.biome": "explicit"
    }
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2,
    "editor.codeActionsOnSave": {
      "quickfix.biome": "explicit",
      "source.organizeImports.biome": "explicit"
    }
  },
  "[typescript]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2,
    "editor.codeActionsOnSave": {
      "quickfix.biome": "explicit",
      "source.organizeImports.biome": "explicit"
    }
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2,
    "editor.codeActionsOnSave": {
      "quickfix.biome": "explicit",
      "source.organizeImports.biome": "explicit"
    }
  },
  "[json]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2
  },
  "[jsonc]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2
  },
  "[css]": {
    "editor.defaultFormatter": "biomejs.biome",
    "editor.tabSize": 2
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2,
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.markdownlint": "explicit"
    },
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": true,
      "strings": true,
      "other": true
    },
    "editor.suggest.showSnippets": true
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },

  // Markdown linting configuration - disabled rules for documentation aesthetics
  "markdownlint.config": {
    "MD022": false,
    "MD031": false,
    "MD032": false,
    "MD033": false,
    "MD040": false,
    "MD051": false
  },

  // Biome configuration
  "biome.enabled": true,
  "biome.lspBin": "node_modules/@biomejs/biome/bin/biome",
  "biome.searchInPath": true,

  // Reduce language server load (Turbo monorepo optimized)
  "files.watcherExclude": {
    "**/node_modules/**": true,
    "**/dist/**": true,
    "**/.git/**": true,
    "**/build/**": true,
    "**/coverage/**": true,
    "**/.turbo/**": true,
    "**/out/**": true,
    "**/.next/**": true,
    "**/.vite/**": true
  },

  // Files to exclude from validation and Copilot indexing
  "files.exclude": {
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/htmlcov": true,
    "**/.coverage": true,
    "**/.coverage.*": true,
    "**/.turbo": true,
    "**/.vite": true,
    "**/.next": true,
    "**/dist": false,
    "**/build": false
  },

  // Search exclusions (improves performance - Turbo monorepo)
  "search.exclude": {
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/htmlcov": true,
    "**/.coverage": true,
    "**/.coverage.*": true,
    "**/node_modules": true,
    "**/.git": true,
    "**/.venv": true,
    "**/volumes": true,
    "**/dist": true,
    "**/build": true,
    "**/coverage": true,
    "**/package-lock.json": true,
    "**/.turbo": true,
    "**/.next": true,
    "**/.vite": true,
    "**/out": true
  },

  // CSS validation (Tailwind v4 compatible)
  "css.lint.unknownAtRules": "ignore",
  "css.validate": true,

  // NPM and package manager settings (Turbo monorepo)
  "npm.packageManager": "npm",
  "npm.autoDetect": "on",
  "npm.enableScriptExplorer": true,
  "npm.scriptExplorerAction": "run",
  "npm.exclude": "**/node_modules/**",

  // File associations (Turbo monorepo aware)
  "files.associations": {
    ".husky/*": "shellscript",
    "**/monitoring/grafana/provisioning/**/*.yml": "yaml",
    "**/.config/monitoring/grafana/provisioning/**/*.yml": "yaml",
    "**/.config/docker/compose.override*.yml": "yaml",
    "**/.devcontainer/containers/gateway/grafana-*.yml": "yaml",
    "**/.devcontainer/containers/gateway/dashboard-*.json": "json",
    "docker-compose*.yml": "yaml",
    "*.Dockerfile": "dockerfile",
    "**/dashboard/src/index.css": "tailwindcss",
    "turbo.json": "jsonc",
    "**/turbo.json": "jsonc",
    "biome.json": "jsonc",
    "**/biome.json": "jsonc",
    "**/tsconfig*.json": "jsonc"
  },

  // ============================================================================
  // Python Settings - FIXED for Python 3.14 compatibility
  // ============================================================================
  "python.defaultInterpreterPath": "C:\\Users\\deanl.MSI\\miniconda3\\envs\\py314\\python.exe",
  "python.terminal.activateEnvironment": true,
  "python.terminal.activateEnvInCurrentTerminal": true,
  "python.terminal.shellIntegration.enabled": true,
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.indexing": true,
  "python.analysis.autoSearchPaths": true,
  "python.analysis.useLibraryCodeForTypes": true,
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.aiHoverSummaries": true,
  "python.analysis.includeFileSpecs": ["**/*.py"],
  "python.analysis.exclude": [
    "**/node_modules/**",
    "**/__pycache__/**",
    "**/.venv/**",
    "**/dist/**",
    "**/build/**"
  ],
  "python.analysis.packageIndexDepths": [
    {
      "name": "",
      "depth": 2,
      "includeAllSymbols": true
    }
  ],

  // UV integration - disable default venv creation
  "python.createEnvironment.contentButton": "hide",
  "python.createEnvironment.trigger": "off",

  // Python linting (aligned with tasks.json)
  "python.linting.enabled": true,
  "python.linting.ruffEnabled": true,
  "python.linting.ruffArgs": [
    "--config",
    "docker-compose-examples/mcp/python_utils/pyproject.toml"
  ],
  "ruff.enable": true,
  "ruff.organizeImports": true,
  "ruff.fixAll": true,
  "ruff.nativeServer": "on",
  "ruff.showNotifications": "onWarning",
  "ruff.interpreter": [
    "C:\\Users\\deanl.MSI\\AppData\\Local\\Programs\\Python\\Python314\\python3.14t.exe"
  ],
  "ruff.path": ["uv", "run", "--python", "3.14t", "ruff"],
  "isort.check": true,
  "isort.importStrategy": "useBundled",
  "isort.args": [
    "--settings-path",
    "docker-compose-examples/mcp/python_utils/pyproject.toml"
  ],
  "isort.interpreter": [
    "C:\\Users\\deanl.MSI\\AppData\\Local\\Programs\\Python\\Python314\\python3.14t.exe"
  ],
  "isort.path": ["uv", "run", "--python", "3.14t", "isort"],
  "python.sortImports.args": [
    "--profile",
    "black",
    "--settings-path",
    "docker-compose-examples/mcp/python_utils/pyproject.toml"
  ],

  // Disable problematic language servers
  "pylint.enabled": false,
  "mypy.enabled": false,
  "python.formatting.provider": "none",
  "python.languageServer": "Pylance",
  "pylance.enable": true,

  // Python environment
  "python-envs.defaultEnvManager": "ms-python.python:conda",
  "python-envs.defaultPackageManager": "ms-python.python:conda",
  "python-envs.pythonProjects": [],

  // Python code actions
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    },
    "editor.tabSize": 4
  },

  // Python testing (aligned with tasks.json)
  "python.testing.pytestArgs": [
    "docker-compose-examples/mcp/python_utils/tests/",
    "-v",
    "--tb=short"
  ],
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  "python.testing.autoTestDiscoverOnSaveEnabled": true,

  // ============================================================================
  // Docker Settings
  // ============================================================================
  "docker.languageserver.diagnostics.deprecatedMaintainer": "ignore",
  "docker.languageserver.diagnostics.emptyContinuationLine": "ignore",
  "docker.languageserver.diagnostics.instructionCasing": "ignore",

  // ============================================================================
  // Remote Development Settings
  // ============================================================================
  "remote.SSH.configFile": "~/.ssh/config",
  "remote.SSH.showLoginTerminal": true,

  // ============================================================================
  // GitHub Copilot Chat Agents (Stable - October 2025)
  // ============================================================================
  "github.copilot.chat.participants.enabled": true,
  "github.copilot.chat.workspaceAgent.enabled": true,
  "github.copilot.chat.terminalAgent.enabled": true,
  "github.copilot.chat.vscodeAgent.enabled": true,
  "github.copilot.chat.gitAgent.enabled": true,

  // ============================================================================
  // GitHub Copilot Chat Settings (Stable - Team Defaults)
  // ============================================================================
  "github.copilot.chat.codeGeneration.useInstructionFiles": true,
  "github.copilot.chat.testGeneration.enabled": true,
  "github.copilot.chat.agent.autoFix": true,
  "github.copilot.chat.agent.currentEditorContext.enabled": true,
  "github.copilot.chat.codesearch.enabled": true,
  "github.copilot.chat.search.enabled": true,
  "github.copilot.chat.reviewAgent.enabled": true,
  "github.copilot.chat.setupTests.enabled": true,
  "github.copilot.chat.localeOverride": "auto",
  "github.copilot.chat.terminalChatLocation": "quickChat",
  "github.copilot.chat.useResponsesApi": true,
  "github.copilot.chat.responsesApiReasoningEffort": "default",
  "github.copilot.chat.responsesApiReasoningSummary": "detailed",
  "github.copilot.chat.newWorkspaceCreation.enabled": true,
  "github.copilot.chat.useProjectTemplates": true,
  "github.copilot.chat.copilotDebugCommand.enabled": true,
  "github.copilot.chat.customInstructionsInSystemMessage": true,
  "github.copilot.chat.editor.temporalContext.enabled": true,
  "github.copilot.chat.edits.temporalContext.enabled": true,
  "github.copilot.chat.edits.suggestRelatedFilesForTests": true,
  "github.copilot.chat.edits.suggestRelatedFilesFromGitHistory": true,
  "github.copilot.chat.imageUpload.enabled": true,
  "github.copilot.chat.reviewSelection.enabled": true,
  "github.copilot.chat.summarizeAgentConversationHistory.enabled": true,

  // ============================================================================
  // GitHub Copilot Context & Follow-ups (Stable)
  // ============================================================================
  "github.copilot.chat.followUps.enabled": true,
  "github.copilot.chat.contextSelection.enabled": true,
  "github.copilot.chat.verboseContext": false,

  // ============================================================================
  // GitHub Copilot Advanced Settings (Experimental - Bleeding Edge)
  // ============================================================================
  "github.copilot.chat.anthropic.thinking.enabled": true,
  "github.copilot.chat.anthropic.thinking.maxTokens": 16000,
  "github.copilot.nextEditSuggestions.enabled": false,
  "github.copilot.nextEditSuggestions.allowWhitespaceOnlyChanges": true,
  "github.copilot.nextEditSuggestions.fixes": true,

  // Experimental: Multi-file edits
  "github.copilot.chat.edits.enableMultiFileEdits": true,
  "github.copilot.chat.edits.confirmations": "always",

  // Experimental: Workspace indexing
  "github.copilot.chat.indexing.enabled": true,
  "github.copilot.chat.documentationSearch.enabled": true,

  // Experimental: Model selection
  "github.copilot.chat.modelSelection.enabled": true,
  "github.copilot.chat.preferredModel": "claude-sonnet-4.5",

  // ============================================================================
  // GitHub Copilot Editor Settings (Stable)
  // ============================================================================
  "github.copilot.editor.enableCodeActions": true,
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.editor.iterativeFixing.enabled": true,
  "github.copilot.renameSuggestions.triggerAutomatically": true,
  "github.copilot.inlineSuggest.enable": true,
  "github.copilot.editor.inlineSuggest.enabled": true,

  // ============================================================================
  // GitHub Copilot - Language Model Tools & Chat Participants
  // ============================================================================
  "github.copilot.chat.languageModelTools.enabled": true,

  // Disable link validation in instruction files (AI semantic references)
  "github.copilot.chat.promptsDiagnostics.enabled": false,

  // ============================================================================
  // YAML Validation Settings
  // ============================================================================
  "yaml.schemas": {
    "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.yml",
    "https://json.schemastore.org/dependabot-2.0.json": ".github/dependabot.yml",
    ".vscode/schemas/mkdocs-schema.json": [
      ".config/mkdocs/mkdocs.yml",
      ".config/mkdocs/base.yml",
      ".config/mkdocs/theme.yml",
      ".config/mkdocs/plugins.yml",
      ".config/mkdocs/markdown.yml",
      ".config/mkdocs/navigation.yml",
      ".config/mkdocs/hooks.yml"
    ],
    ".vscode/schemas/markdown-doc.json": "docs/**/*.md",
    ".vscode/schemas/monorepo-structure-schema.json": "monorepo.yml"
  },
  "yaml.validate": true,
  "yaml.customTags": [
    "!encrypted/pkcs1-oaep scalar",
    "!vault scalar",
    "!ENV sequence",
    "tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji scalar",
    "tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg scalar",
    "tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format scalar",
    "tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping"
  ],
  "yaml.schemaStore.enable": true,
  "yaml.schemaStore.url": "https://www.schemastore.org/api/json/catalog.json",
  "yaml.disableDefaultProperties": false,
  "yaml.maxItemsComputed": 5000,

  // Disable YAML validation for files with custom schemas (Grafana, etc.)
  "[**/gateway/grafana-*.yml]": {
    "yaml.validate": false
  },
  "[**/.devcontainer/containers/gateway/grafana-*.yml]": {
    "yaml.validate": false
  },
  "[.config/docker/compose.override.example.yml]": {
    "yaml.validate": false
  },
  "[.config/mkdocs/mkdocs.yml]": {
    "yaml.validate": true
  },
  "[.config/mkdocs/*.yml]": {
    "yaml.validate": true
  },
  "[.config/mkdocs/*.conf]": {
    "yaml.validate": false,
    "files.associations": {
      "*.conf": "yaml"
    }
  },

  // ============================================================================
  // Terminal Settings (2025 API)
  // ============================================================================
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.shellIntegration.enabled": true,
  "terminal.integrated.shellIntegration.showWelcome": false,
  "terminal.integrated.shellIntegration.decorationsEnabled": "both",
  "terminal.integrated.automationProfile.windows": null,
  "terminal.integrated.automationProfile.linux": null,

  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    }
  },

  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash",
      "icon": "terminal-bash"
    },
    "zsh": {
      "path": "zsh"
    },
    "fish": {
      "path": "fish"
    }
  },

  // ============================================================================
  // Copilot Tools & Advanced Features
  // ============================================================================
  "chat.tools.global.autoApprove": true,
  "pgsql.copilot.modelOptions": {},

  // ============================================================================
  // MCP Server Sampling Configuration
  // ============================================================================
  "chat.mcp.serverSampling": {
    "react-scuba/.vscode/mcp.json: github": {
      "allowedModels": [
        "copilot/claude-sonnet-4",
        "copilot/auto",
        "copilot/claude-haiku-4.5",
        "copilot/claude-opus-41",
        "copilot/claude-3.5-sonnet",
        "copilot/claude-sonnet-4.5",
        "copilot/gemini-2.5-pro",
        "copilot/gpt-4.1",
        "copilot/gpt-4o",
        "copilot/gpt-5",
        "copilot/gpt-5-mini",
        "copilot/gpt-5-codex",
        "copilot/grok-code-fast-1"
      ]
    }
  },

  // ============================================================================
  // GitHub Copilot Advanced Settings (Experimental - Bleeding Edge)
  // ============================================================================
  "github.copilot.advanced": {
    "timeout": 30000,  // 30 seconds (default is 10000ms)
    "debug.overrideEngine": "gpt-4",
    "debug.useNodeFetcher": true
  },
  "http.timeout": 60000  // 60 seconds for general HTTP requests
}
