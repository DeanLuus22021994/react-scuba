{
  "servers": {
    "postgres": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--name",
        "postgres-mcp-server",
        "--security-opt=no-new-privileges:true",
        "--cap-drop=ALL",
        "--user",
        "node:node",
        "--cpus=1.0",
        "--memory=2g",
        "--memory-reservation=1g",
        "--pids-limit=50",
        "--network",
        "mcp-cluster",
        "--network-alias",
        "postgres-mcp",
        "--dns=172.28.0.1",
        "--add-host=host.docker.internal:host-gateway",
        "--stop-timeout=30",
        "--restart=unless-stopped",
        "--tmpfs=/tmp:rw,noexec,nosuid,size=200m",
        "-p",
        "9092:9090",
        "-v",
        "react_scuba_postgres-node-cache:/cache/node:rw,Z",
        "-v",
        "react_scuba_postgres-cache:/cache/pg:rw,Z",
        "-e",
        "POSTGRES_CONNECTION",
        "-e",
        "NODE_ENV=production",
        "-e",
        "NODE_OPTIONS=--max-old-space-size=2048 --enable-source-maps",
        "-e",
        "OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317",
        "-e",
        "OTEL_SERVICE_NAME=postgres-mcp-server",
        "-e",
        "LOG_LEVEL=info",
        "-e",
        "LOG_FORMAT=json",
        "mcp-postgres:latest"
      ],
      "env": {
        "POSTGRES_CONNECTION": "postgresql://postgres:${env:DOCKER_POSTGRES_PASSWORD}@host.docker.internal:5432/postgres"
      }
    }
  }
}